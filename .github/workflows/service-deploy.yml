name: Service Deployment

on:
  workflow_run:
    workflows: ["Networking Stack & Approval"]
    types:
      - completed
    branches:
      - feat/networking-flow

  pull_request:
    branches:
      - feat/networking-flow
    paths-ignore:
      - 'charts/**'

permissions:
  id-token: write
  contents: write

jobs:
  deploy-service:
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'pull_request' || 
      (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success')
# ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - uses: actions/checkout@v4

      - name: Download environment artifact
        uses: actions/download-artifact@v4
        with:
          name: env-info

      - name: Read environment info
        id: env
        run: |
          ENVIRONMENT=$(cat env.txt)
          echo "ENV_PREFIX=$ENVIRONMENT" >> $GITHUB_ENV
          echo "Deployment Environment: $ENVIRONMENT"

      - name: Debug Environment Variables
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            ENVIRONMENT="${{ github.ref_name }}"
          else
            ENVIRONMENT="${{ github.event.pull_request.base.ref }}"
          fi

          echo "Deployment Environment: $ENVIRONMENT"
          echo "ENV_PREFIX: $ENVIRONMENT"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: Install AWS CDK
        run: npm install -g aws-cdk
      
      - name: Install dependencies
        run: npm install
      
      - name: Deploy ServiceStack
        run: cdk deploy ServiceStack --require-approval never
