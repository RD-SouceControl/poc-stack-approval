name: Single-Workflow

on:
  push:
    branches:
      # - feat/networking-flow
      # - master
      - dev
    paths-ignore:
      - 'charts/**'

  pull_request:
    branches:
      - master
      - feat/networking-flow
    paths-ignore:
      - 'charts/**'

permissions:
  id-token: write
  contents: write

jobs:
  detect-networking-changes:
    runs-on: ubuntu-latest
    outputs:
      requires_approval: ${{ steps.detect.outputs.requires_approval }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Debug Environment Variables
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            ENVIRONMENT="${{ github.ref_name }}"
          else
            ENVIRONMENT="${{ github.event.pull_request.base.ref }}"
          fi

          echo "Deployment Environment: $ENVIRONMENT"
          echo "ENV_PREFIX: $ENVIRONMENT"
            
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: Install AWS CDK
        run: npm install -g aws-cdk
      
      - name: Install dependencies
        run: npm install
      
      - name: cdk diff networking
        id: detect
        run: |
          DIFF_OUTPUT=$(cdk diff NetworkStack || true)
          echo "$DIFF_OUTPUT"
          
          if [[ -z "$DIFF_OUTPUT" || "$DIFF_OUTPUT" == *"There were no differences"* ]]; then
            echo "No changes detected in NetworkingStack"
            echo "requires_approval=false" >> "$GITHUB_OUTPUT"
          else
            echo "Changes detected in NetworkingStack"
            echo "requires_approval=true" >> "$GITHUB_OUTPUT"
          fi

  request-approval:
    needs: detect-networking-changes
    if: needs.detect-networking-changes.outputs.requires_approval == 'true'
    runs-on: ubuntu-latest
    permissions:
      issues: write
    outputs:
      deployment_approved: ${{ steps.set_approval.outputs.deployment_approved }}
    steps:
      - name: Manual Workflow Approval
        id: approval
        uses: trstringer/manual-approval@v1.9.1
        with:
          secret: ${{ secrets.GITHUB_TOKEN }}
          approvers: Ram1814
          minimum-approvals: 1
          issue-title: "Approve Networking Changes"
          issue-body: "Please approve or deny the deployment of networking changes."

      - name: Check Approval Status
        id: set_approval
        run: |
          if [[ "${{ steps.approval.outcome }}" == "success" ]]; then
            echo "Manual approval succeeded"
            echo "deployment_approved=true" >> "$GITHUB_OUTPUT"
          else
            echo "Manual approval failed"
            echo "deployment_approved=false" >> "$GITHUB_OUTPUT"
          fi

  deploy-service:
    needs: [detect-networking-changes, request-approval]
    if: |
      needs.detect-networking-changes.outputs.requires_approval == 'false' ||
      (needs.detect-networking-changes.outputs.requires_approval == 'true' && needs.request-approval.outputs.deployment_approved == 'true')
    runs-on: ubuntu-latest
    steps:
      - name: Determine Environment
        run: |
          if [[ "${{ github.event_name }}" == "workflow_run" ]]; then
            ENV="${{ github.event.workflow_run.head_branch }}"
          elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
            ENV="${{ github.event.pull_request.base.ref }}"
          else
            ENV="${{ github.ref_name }}"
          fi
          echo "ENV_PREFIX=$ENV" >> $GITHUB_ENV
          echo "Environment resolved: $ENV"

      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: Install AWS CDK
        run: npm install -g aws-cdk
      
      - name: Install dependencies
        run: npm install
      
      - name: Deploy ServiceStack
        run: cdk deploy ServiceStack --require-approval never